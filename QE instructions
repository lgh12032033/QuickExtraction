++++++++++++++T4版本QE++++++++++++++


规则改动：为了使得匹配更加灵活，把原来的全局统一匹配模式改成了列项独立匹配模式。

原："rule_Type": "reregular_noe",    为全局属性rule_Type

现改为列项：

"columns": [
    {
      "cloumnName":"监督项目",      # 独立设置标题属性
      "col": 0,                                   # 独立设置列绑定 
      "lists_rule":"(?<=监督项目：)\w*(?=于)",   #  独立设置匹配规则
      "Multiple":False,                    # 新增属性，是否为多项，可选值【True】【False】
      "rule_Type": "reregular_noe"  #  原全局属性改为列属性，匹配模式可选值【reregular_noe】【reregular】
    },...
]

属性解释：

Multiple ： 如果设置为 False 则会进行分行填充，如果设置为 True 则会以  ‘、’进行分割

列新增子项功能

{
      "cloumnName":"监督结束时间",
      "col": 7,
      "lists_rule":"(?<=本次监督以).*(?=\s)",
      "Multiple":False,
      "rule_Type": "reregular_noe",
      "child":{
          "lists_rule":"(?<=至)\d{4}年\d{1,2}月",
          "Multiple":False,
          "rule_Type": "reregular_noe"
      }
    }, 

子项属性child，可以设置独立的lists_rule，rule_Type以及Multiple。
原理是将父项中匹配到的内容，作为新的范围，在新的范围上进行子项的规则匹配，增加了整体灵活性
举例：
	张三，北京，电话：13695759512
	李四，上海，电话：13792667852

此时我们要分别获取上述两个人的信息，我们可以先获取两个人的整体信息
          \W{1,}\d*   ->  匹配到两个内容  [张三，北京，电话：13695759512,  李四，上海，电话：13792667852]
然后我们在可以单独设置子项匹配规则获区 姓名、地址、电话信息
	.*?(?=，)     =》	 [张三 、李四]
	(?=，).+(?=，电话)     [北京 、上海]
	\d+             	 [13695759512,  13792667852]

子项支持嵌套，即子项中可以包含子项


新增功能：日志记录功能，无论是成功还是失败都会进行记录。
如果失败会记录具体错误的位置在哪，方便排错。
